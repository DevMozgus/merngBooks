{"ast":null,"code":"var _jsxFileName = \"/home/niko/Documents/web/openstack/bookExercise/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { setContext } from 'apollo-link-context';\nimport { ApolloClient, ApolloProvider, HttpLink, InMemoryCache } from '@apollo/client';\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem(\"current-user-token\");\n  return {\n    headers: { ...headers,\n      Authorization: token ? `bearer ${token}` : null\n    }\n  };\n});\nconst httpLink = new HttpLink({\n  uri: \"http://localhost:4000\"\n});\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink)\n});\nReactDOM.render( /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }\n}, \"    \", /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 39\n  }\n})), document.getElementById('root'));","map":{"version":3,"sources":["/home/niko/Documents/web/openstack/bookExercise/frontend/src/index.js"],"names":["React","ReactDOM","App","setContext","ApolloClient","ApolloProvider","HttpLink","InMemoryCache","authLink","_","headers","token","localStorage","getItem","Authorization","httpLink","uri","client","cache","link","concat","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,QAAvC,EAAiDC,aAAjD,QAAqE,gBAArE;AAEA,MAAMC,QAAQ,GAAGL,UAAU,CAAC,CAACM,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC9C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,oBAArB,CAAd;AACA,SAAO;AACLH,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPI,MAAAA,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AAFpC;AADJ,GAAP;AAMD,CAR0B,CAA3B;AAUA,MAAMI,QAAQ,GAAG,IAAIT,QAAJ,CAAa;AAAEU,EAAAA,GAAG,EAAE;AAAP,CAAb,CAAjB;AAEA,MAAMC,MAAM,GAAG,IAAIb,YAAJ,CAAiB;AAC9Bc,EAAAA,KAAK,EAAE,IAAIX,aAAJ,EADuB;AAE9BY,EAAAA,IAAI,EAAEX,QAAQ,CAACY,MAAT,CAAgBL,QAAhB;AAFwB,CAAjB,CAAf;AAKAd,QAAQ,CAACoB,MAAT,eACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEJ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAoC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAApC,CADF,EAEsBK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFtB","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { setContext } from 'apollo-link-context'\nimport { ApolloClient, ApolloProvider, HttpLink, InMemoryCache} from '@apollo/client' \n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"current-user-token\")\n  return {\n    headers: {\n      ...headers,\n      Authorization: token ? `bearer ${token}` : null\n    }\n  }\n})\n\nconst httpLink = new HttpLink({ uri: \"http://localhost:4000\"})\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink)\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>    <App />\n  </ApolloProvider>,  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}