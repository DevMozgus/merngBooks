{"ast":null,"code":"var _jsxFileName = \"/home/niko/Documents/web/openstack/bookExercise/frontend/src/components/Recommended.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { USER_INFO, BOOKS_BY_GENRE } from \"../queries\";\n\nconst Recommended = ({\n  show\n}) => {\n  const userResult = useQuery(USER_INFO);\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    const [result] = useQuery(BOOKS_BY_GENRE, {\n      variables: {\n        genre: favouriteGenre\n      }\n    });\n    setBooks(result.data.allBooks);\n  }, [userResult]);\n\n  if (!show) {\n    return null;\n  }\n\n  if (userResult.loading || !books) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    }, \"loading...\");\n  }\n\n  const favouriteGenre = userResult.data.me.favouriteGenre;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"books\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"books in your favourite genre \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 44\n    }\n  }, favouriteGenre)), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"author\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"published\")), books.map(book => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: book.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, book.title), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, book.author.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, book.published));\n  }))));\n};\n\nexport default Recommended;","map":{"version":3,"sources":["/home/niko/Documents/web/openstack/bookExercise/frontend/src/components/Recommended.js"],"names":["React","useEffect","useState","useQuery","useMutation","USER_INFO","BOOKS_BY_GENRE","Recommended","show","userResult","books","setBooks","result","variables","genre","favouriteGenre","data","allBooks","loading","me","map","book","title","author","name","published"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,YAA1C;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAMC,UAAU,GAAGN,QAAQ,CAACE,SAAD,CAA3B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM,CAACW,MAAD,IAAWT,QAAQ,CAACG,cAAD,EACvB;AAAEO,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAEC;AAAT;AAAb,KADuB,CAAzB;AAEAJ,IAAAA,QAAQ,CAACC,MAAM,CAACI,IAAP,CAAYC,QAAb,CAAR;AACD,GAJQ,EAIN,CAACR,UAAD,CAJM,CAAT;;AAMA,MAAI,CAACD,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AACD,MAAIC,UAAU,CAACS,OAAX,IAAsB,CAACR,KAA3B,EAAmC;AACjC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,QAAMK,cAAc,GAAGN,UAAU,CAACO,IAAX,CAAgBG,EAAhB,CAAmBJ,cAA1C;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,cAAJ,CAArC,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CADF,EAUGL,KAAK,CAACU,GAAN,CAAUC,IAAI,IAAI;AACjB,wBACA;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACC,KAAV,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,MAAL,CAAYC,IAAjB,CAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,IAAI,CAACI,SAAV,CAHA,CADA;AAOD,GARA,CAVH,CADF,CAHF,CADF;AA6BD,CAjDD;;AAmDA,eAAelB,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useQuery, useMutation } from '@apollo/client';\nimport { USER_INFO, BOOKS_BY_GENRE } from \"../queries\"\n\nconst Recommended = ({ show }) => {\n  const userResult = useQuery(USER_INFO)\n  const [books, setBooks] = useState([])\n\n  useEffect(() => {\n    const [result] = useQuery(BOOKS_BY_GENRE, \n      { variables: { genre: favouriteGenre }})\n    setBooks(result.data.allBooks)\n  }, [userResult])\n\n  if (!show) {\n    return null\n  }\n  if (userResult.loading || !books)  {\n    return <div>loading...</div>\n  }\n\n  const favouriteGenre = userResult.data.me.favouriteGenre\n\n\n  return (\n    <div>\n      <h2>books</h2>\n      <label>books in your favourite genre <b>{favouriteGenre}</b></label>\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>\n              author\n            </th>\n            <th>\n              published\n            </th>\n          </tr>\n          {books.map(book => {\n            return (\n            <tr key={book.title}>\n            <td>{book.title}</td>\n            <td>{book.author.name}</td>\n            <td>{book.published}</td>\n            </tr>\n            ) \n          }\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Recommended"]},"metadata":{},"sourceType":"module"}