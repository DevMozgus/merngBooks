{"ast":null,"code":"var _jsxFileName = \"/home/niko/Documents/web/openstack/bookExercise/frontend/src/components/Recommended.js\";\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { ALL_BOOKS, USER_INFO } from \"../queries\";\n\nconst Recommended = ({\n  show\n}) => {\n  const bookResult = useQuery(ALL_BOOKS);\n  const userResult = useQuery(USER_INFO);\n\n  if (!show) {\n    return null;\n  }\n\n  if (bookResult.loading || userResult.loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 12\n      }\n    }, \"loading...\");\n  }\n\n  const books = bookResult.data ? bookResult.data.allBooks : [];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"books\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"books in your favourite genre \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 44\n    }\n  }, userResult.data.me.favouriteGenre)), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"author\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"published\")), books.map(book => {\n    if (book.genres.includes(userResult.data.me.favouriteGenre)) return /*#__PURE__*/React.createElement(\"tr\", {\n      key: book.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, book.title), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, book.author.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, book.published));\n  }))));\n};\n\nexport default Recommended;","map":{"version":3,"sources":["/home/niko/Documents/web/openstack/bookExercise/frontend/src/components/Recommended.js"],"names":["React","useQuery","ALL_BOOKS","USER_INFO","Recommended","show","bookResult","userResult","loading","books","data","allBooks","me","favouriteGenre","map","book","genres","includes","title","author","name","published"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,YAArC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAMC,UAAU,GAAGL,QAAQ,CAACC,SAAD,CAA3B;AACA,QAAMK,UAAU,GAAGN,QAAQ,CAACE,SAAD,CAA3B;;AAEA,MAAI,CAACE,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AACD,MAAIC,UAAU,CAACE,OAAX,IAAsBD,UAAU,CAACC,OAArC,EAA+C;AAC7C,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,QAAMC,KAAK,GAAGH,UAAU,CAACI,IAAX,GAAkBJ,UAAU,CAACI,IAAX,CAAgBC,QAAlC,GAA6C,EAA3D;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,UAAU,CAACG,IAAX,CAAgBE,EAAhB,CAAmBC,cAAvB,CAArC,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CADF,EAUGJ,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI;AACjB,QAAGA,IAAI,CAACC,MAAL,CAAYC,QAAZ,CAAqBV,UAAU,CAACG,IAAX,CAAgBE,EAAhB,CAAmBC,cAAxC,CAAH,EAA4D,oBACxD;AAAI,MAAA,GAAG,EAAEE,IAAI,CAACG,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,IAAI,CAACG,KAAV,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,IAAI,CAACI,MAAL,CAAYC,IAAjB,CAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,IAAI,CAACM,SAAV,CAHA,CADwD;AAM1D,GAPH,CAVH,CADF,CAHF,CADF;AA4BD,CA1CD;;AA4CA,eAAejB,WAAf","sourcesContent":["import React from 'react'\nimport { useQuery } from '@apollo/client';\nimport { ALL_BOOKS, USER_INFO } from \"../queries\"\n\nconst Recommended = ({ show }) => {\n  const bookResult = useQuery(ALL_BOOKS)\n  const userResult = useQuery(USER_INFO)\n\n  if (!show) {\n    return null\n  }\n  if (bookResult.loading || userResult.loading)  {\n    return <div>loading...</div>\n  }\n\n  const books = bookResult.data ? bookResult.data.allBooks : []\n\n\n  return (\n    <div>\n      <h2>books</h2>\n      <label>books in your favourite genre <b>{userResult.data.me.favouriteGenre}</b></label>\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>\n              author\n            </th>\n            <th>\n              published\n            </th>\n          </tr>\n          {books.map(book => {\n            if(book.genres.includes(userResult.data.me.favouriteGenre)) return  (\n                <tr key={book.title}>\n                <td>{book.title}</td>\n                <td>{book.author.name}</td>\n                <td>{book.published}</td>\n                </tr>\n            )}\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Recommended"]},"metadata":{},"sourceType":"module"}